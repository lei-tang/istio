# TODO: the original template has service account, roles, etc
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: {{ .Release.Namespace }}
  labels:
    app: prometheus
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.prometheus.replicaCount }}
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
        release: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/inject: "false"
        {{- if .Values.prometheus.podAnnotations }}
{{ toYaml .Values.prometheus.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      serviceAccountName: prometheus
{{- if .Values.global.priorityClassName }}
      priorityClassName: "{{ .Values.global.priorityClassName }}"
{{- end }}
      containers:
        - name: prometheus
          image: "{{ .Values.prometheus.hub }}/{{ .Values.prometheus.image }}:{{ .Values.prometheus.tag }}"
          imagePullPolicy: {{ .Values.global.imagePullPolicy | default "Always" }}
          args:
            - '--storage.tsdb.retention={{ .Values.prometheus.retention }}'
            - '--config.file=/etc/prometheus/prometheus.yml'
          ports:
            - containerPort: 9090
              name: http
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
          resources:
{{- if .Values.prometheus.resources }}
{{ toYaml .Values.prometheus.resources | indent 12 }}
{{- else }}
{{ toYaml .Values.global.defaultResources | indent 12 }}
{{- end }}
          volumeMounts:
          - name: config-volume
            mountPath: /etc/prometheus
          - mountPath: /etc/istio-certs
            name: istio-certs

{{- if .Values.global.provisionPrometheusCert }}
        - name: istio-proxy
            {{- if contains "/" (annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image) }}
          image: "{{ annotation .ObjectMeta `sidecar.istio.io/proxyImage` .Values.global.proxy.image }}"
            {{- else }}
          image: "{{ .Values.global.hub }}/{{ .Values.global.proxy.image }}:{{ .Values.global.tag }}"
            {{- end }}
          ports:
            - containerPort: 15090
              protocol: TCP
              name: http-envoy-prom
          args:
            - proxy
            - sidecar
            - --domain
            - $(POD_NAMESPACE).svc.{{ .Values.global.proxy.clusterDomain }}
            - --configPath
            - "/etc/istio/proxy"
            - --binaryPath
            - "/usr/local/bin/envoy"
            - --serviceCluster
              {{ if ne "" (index .ObjectMeta.Labels "app") -}}
            - "{{ index .ObjectMeta.Labels `app` }}.$(POD_NAMESPACE)"
              {{ else -}}
            - "{{ valueOrDefault .DeploymentMeta.Name `istio-proxy` }}.{{ valueOrDefault .DeploymentMeta.Namespace `default` }}"
              {{ end -}}
            - --drainDuration
            - "{{ formatDuration .ProxyConfig.DrainDuration }}"
            - --parentShutdownDuration
            - "{{ formatDuration .ProxyConfig.ParentShutdownDuration }}"
            - --discoveryAddress
            - "{{ annotation .ObjectMeta `sidecar.istio.io/discoveryAddress` .ProxyConfig.DiscoveryAddress }}"
              {{- if eq .Values.global.proxy.tracer "lightstep" }}
            - --lightstepAddress
            - "{{ .ProxyConfig.GetTracing.GetLightstep.GetAddress }}"
            - --lightstepAccessToken
            - "{{ .ProxyConfig.GetTracing.GetLightstep.GetAccessToken }}"
            - --lightstepSecure={{ .ProxyConfig.GetTracing.GetLightstep.GetSecure }}
            - --lightstepCacertPath
            - "{{ .ProxyConfig.GetTracing.GetLightstep.GetCacertPath }}"
              {{- else if eq .Values.global.proxy.tracer "zipkin" }}
            - --zipkinAddress
            - "{{ .ProxyConfig.GetTracing.GetZipkin.GetAddress }}"
              {{- else if eq .Values.global.proxy.tracer "datadog" }}
            - --datadogAgentAddress
            - "{{ .ProxyConfig.GetTracing.GetDatadog.GetAddress }}"
              {{- end }}
            - --proxyLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/logLevel` .Values.global.proxy.logLevel}}
            - --proxyComponentLogLevel={{ annotation .ObjectMeta `sidecar.istio.io/componentLogLevel` .Values.global.proxy.componentLogLevel}}
            - --connectTimeout
            - "{{ formatDuration .ProxyConfig.ConnectTimeout }}"
              {{- if .Values.global.proxy.envoyStatsd.enabled }}
            - --statsdUdpAddress
            - "{{ .ProxyConfig.StatsdUdpAddress }}"
              {{- end }}
              {{- if .Values.global.proxy.envoyMetricsService.enabled }}
            - --envoyMetricsService
            - '{{ protoToJSON .ProxyConfig.EnvoyMetricsService }}'
              {{- end }}
              {{- if .Values.global.proxy.envoyAccessLogService.enabled }}
            - --envoyAccessLogService
            - '{{ protoToJSON .ProxyConfig.EnvoyAccessLogService }}'
              {{- end }}
            - --proxyAdminPort
            - "{{ .ProxyConfig.ProxyAdminPort }}"
              {{ if gt .ProxyConfig.Concurrency 0 -}}
            - --concurrency
            - "{{ .ProxyConfig.Concurrency }}"
              {{ end -}}
              {{- if .Values.global.istiod.enabled }}
            - --controlPlaneAuthPolicy
            - NONE
              {{- else if .Values.global.controlPlaneSecurityEnabled }}
            - --controlPlaneAuthPolicy
            - MUTUAL_TLS
              {{- else }}
            - --controlPlaneAuthPolicy
            - NONE
              {{- end }}
            - --dnsRefreshRate
            - {{ valueOrDefault .Values.global.proxy.dnsRefreshRate "300s" }}
              {{- if (ne (annotation .ObjectMeta "status.sidecar.istio.io/port" .Values.global.proxy.statusPort) "0") }}
            - --statusPort
            - "{{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort }}"
              {{- end }}
              {{- if .Values.global.trustDomain }}
            - --trust-domain={{ .Values.global.trustDomain }}
              {{- end }}
              {{- if .Values.global.logAsJson }}
            - --log_as_json
              {{- end }}
            - --controlPlaneBootstrap=false
            {{- if .Values.global.proxy.lifecycle }}
          lifecycle:
            {{ toYaml .Values.global.proxy.lifecycle | indent 4 }}
            {{- end }}
          env:
            - name: OUTPUT_KEY_CERT_TO_DIRECTORY
              value: "/etc/istio-certs"
            - name: JWT_POLICY
              value: {{ .Values.global.jwtPolicy }}
            - name: PILOT_CERT_PROVIDER
              value: {{ .Values.global.pilotCertProvider }}
            # Temp, pending PR to make it default or based on the istiodAddr env
            - name: CA_ADDR
                {{- if .Values.global.configNamespace }}
              value: istio-pilot.{{ .Values.global.configNamespace }}.svc:15012
                {{- else }}
              value: istio-pilot.istio-system.svc:15012
              {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
              {{- if eq .Values.global.proxy.tracer "datadog" }}
              {{- if isset .ObjectMeta.Annotations `apm.datadoghq.com/env` }}
              {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
            - name: {{ $key }}
              value: "{{ $value }}"
              {{- end }}
              {{- end }}
              {{- end }}
            - name: ISTIO_META_POD_PORTS
              value: |-
                [
                  {{- $first := true }}
                  {{- range $index1, $c := .Spec.Containers }}
                  {{- range $index2, $p := $c.Ports }}
                  {{- if (structToJSON $p) }}
                  {{if not $first}},{{end}}{{ structToJSON $p }}
                  {{- $first = false }}
                  {{- end }}
                  {{- end}}
                  {{- end}}
                ]
            - name: ISTIO_META_CLUSTER_ID
              value: "{{ valueOrDefault .Values.global.multiCluster.clusterName `Kubernetes` }}"
            - name: ISTIO_META_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ISTIO_META_CONFIG_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: ISTIO_META_INTERCEPTION_MODE
              value: "{{ or (index .ObjectMeta.Annotations `sidecar.istio.io/interceptionMode`) .ProxyConfig.InterceptionMode.String }}"
              {{- if .Values.global.network }}
            - name: ISTIO_META_NETWORK
              value: "{{ .Values.global.network }}"
              {{- end }}
              {{ if .ObjectMeta.Annotations }}
            - name: ISTIO_METAJSON_ANNOTATIONS
              value: |
                  {{ toJSON .ObjectMeta.Annotations }}
                  {{ end }}
              {{ if .ObjectMeta.Labels }}
            - name: ISTIO_METAJSON_LABELS
              value: |
                  {{ toJSON .ObjectMeta.Labels }}
                  {{ end }}
              {{- if .DeploymentMeta.Name }}
            - name: ISTIO_META_WORKLOAD_NAME
              value: {{ .DeploymentMeta.Name }}
              {{ end }}
              {{- if and .TypeMeta.APIVersion .DeploymentMeta.Name }}
            - name: ISTIO_META_OWNER
              value: kubernetes://apis/{{ .TypeMeta.APIVersion }}/namespaces/{{ valueOrDefault .DeploymentMeta.Namespace `default` }}/{{ toLower .TypeMeta.Kind}}s/{{ .DeploymentMeta.Name }}
              {{- end}}
              {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
            - name: ISTIO_BOOTSTRAP_OVERRIDE
              value: "/etc/istio/custom-bootstrap/custom_bootstrap.json"
              {{- end }}
              {{- if .Values.global.meshID }}
            - name: ISTIO_META_MESH_ID
              value: "{{ .Values.global.meshID }}"
              {{- else if .Values.global.trustDomain }}
            - name: ISTIO_META_MESH_ID
              value: "{{ .Values.global.trustDomain }}"
              {{- end }}
              {{- if eq .Values.global.proxy.tracer "stackdriver" }}
            - name: STACKDRIVER_TRACING_ENABLED
              value: "true"
            - name: STACKDRIVER_TRACING_DEBUG
              value: "{{ .ProxyConfig.GetTracing.GetStackdriver.GetDebug }}"
            - name: STACKDRIVER_TRACING_MAX_NUMBER_OF_ANNOTATIONS
              value: "{{ .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfAnnotations }}"
            - name: STACKDRIVER_TRACING_MAX_NUMBER_OF_ATTRIBUTES
              value: "{{ .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfAttributes }}"
            - name: STACKDRIVER_TRACING_MAX_NUMBER_OF_MESSAGE_EVENTS
              value: "{{ .ProxyConfig.GetTracing.GetStackdriver.GetMaxNumberOfMessageEvents }}"
                  {{- end }}
                  {{- if and (eq .Values.global.proxy.tracer "datadog") (isset .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
                  {{- range $key, $value := fromJSON (index .ObjectMeta.Annotations `apm.datadoghq.com/env`) }}
                - name: {{ $key }}
                  value: "{{ $value }}"
              {{- end }}
              {{- end }}
              {{- range $key, $value := .ProxyConfig.ProxyMetadata }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          imagePullPolicy: "{{ valueOrDefault .Values.global.imagePullPolicy `Always` }}"
            {{ if ne (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) `0` }}
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: {{ annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort }}
            initialDelaySeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/initialDelaySeconds` .Values.global.proxy.readinessInitialDelaySeconds }}
            periodSeconds: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/periodSeconds` .Values.global.proxy.readinessPeriodSeconds }}
            failureThreshold: {{ annotation .ObjectMeta `readiness.status.sidecar.istio.io/failureThreshold` .Values.global.proxy.readinessFailureThreshold }}
            {{ end -}}
          securityContext:
            allowPrivilegeEscalation: {{ .Values.global.proxy.privileged }}
            capabilities:
                {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
              add:
                  {{ if eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY` -}}
                - NET_ADMIN
                  {{- end }}
                  {{ if eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true` -}}
                - NET_BIND_SERVICE
                {{- end }}
                {{- end }}
              drop:
                - ALL
            privileged: {{ .Values.global.proxy.privileged }}
            readOnlyRootFilesystem: {{ not .Values.global.proxy.enableCoreDump }}
            runAsGroup: 1337
            fsGroup: 1337
              {{ if or (eq (annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode) `TPROXY`) (eq (annotation .ObjectMeta `sidecar.istio.io/capNetBindService` .Values.global.proxy.capNetBindService) `true`) -}}
            runAsNonRoot: false
            runAsUser: 0
              {{- else -}}
            runAsNonRoot: true
            runAsUser: 1337
            {{- end }}
          resources:
              {{ if or (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
            requests:
                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU`) -}}
              cpu: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyCPU` }}"
                {{ end}}
                {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory`) -}}
              memory: "{{ index .ObjectMeta.Annotations `sidecar.istio.io/proxyMemory` }}"
              {{ end }}
              {{ else -}}
              {{- if .Values.global.proxy.resources }}
            {{ toYaml .Values.global.proxy.resources | indent 4 }}
            {{- end }}
            {{  end -}}
          volumeMounts:
              {{- if eq .Values.global.pilotCertProvider "citadel" }}
            - mountPath: /etc/istio/citadel-ca-cert
              name: citadel-ca-cert
              {{- end }}
              {{ if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
            - mountPath: /etc/istio/custom-bootstrap
              name: custom-bootstrap-volume
              {{- end }}
            - mountPath: /etc/istio/proxy
              name: istio-envoy
              {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
            - mountPath: /var/run/secrets/tokens
              name: istio-token
              {{- end }}
            - mountPath: /etc/istio-certs/
              name: istio-certs
              {{- if and (eq .Values.global.proxy.tracer "lightstep") .Values.global.tracer.lightstep.cacertPath }}
            - mountPath: {{ directory .ProxyConfig.GetTracing.GetLightstep.GetCacertPath }}
              name: lightstep-certs
              readOnly: true
                {{- end }}
                {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount` }}
              {{ range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolumeMount`) }}
            - name: "{{  $index }}"
                {{ toYaml $value | indent 4 }}
                {{ end }}
        {{- end }}

{{- end }}

      volumes:
      - name: config-volume
        configMap:
          name: prometheus
{{- if .Values.global.provisionPrometheusCert }}
      - name: istio-certs
        emptyDir:
          medium: Memory
{{- else }}
      - name: istio-certs
        secret:
          defaultMode: 420
{{- if not .Values.security.enabled }}
          optional: true
{{- end }}
          secretName: istio.default
{{- end }}

{{- if .Values.global.provisionPrometheusCert }}
        {{- if (isset .ObjectMeta.Annotations `sidecar.istio.io/bootstrapOverride`) }}
      - name: custom-bootstrap-volume
        configMap:
          name: {{ annotation .ObjectMeta `sidecar.istio.io/bootstrapOverride` "" }}
        {{- end }}
      - emptyDir:
          medium: Memory
        name: istio-envoy
        {{- if eq .Values.global.jwtPolicy "third-party-jwt" }}
      - name: istio-token
        projected:
          sources:
            - serviceAccountToken:
                path: istio-token
                expirationSeconds: 43200
                audience: {{ .Values.global.sds.token.aud }}
          {{- end }}
        {{- if eq .Values.global.pilotCertProvider "citadel" }}
      - name: citadel-ca-cert
        configMap:
          name: istio-ca-root-cert
        {{- end }}
          {{- if isset .ObjectMeta.Annotations `sidecar.istio.io/userVolume` }}
        {{range $index, $value := fromJSON (index .ObjectMeta.Annotations `sidecar.istio.io/userVolume`) }}
      - name: "{{ $index }}"
            {{ toYaml $value | indent 2 }}
            {{ end }}
          {{ end }}
        {{- if and (eq .Values.global.proxy.tracer "lightstep") .Values.global.tracer.lightstep.cacertPath }}
      - name: lightstep-certs
        secret:
          optional: true
        secretName: lightstep.cacert
        {{- end }}

        {{- if .Values.global.podDNSSearchNamespaces }}
      dnsConfig:
        searches:
            {{- range .Values.global.podDNSSearchNamespaces }}
          - {{ render . }}
              {{- end }}
        {{- end }}
      podRedirectAnnot:
        sidecar.istio.io/interceptionMode: "{{ annotation .ObjectMeta `sidecar.istio.io/interceptionMode` .ProxyConfig.InterceptionMode }}"
        traffic.sidecar.istio.io/includeOutboundIPRanges: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeOutboundIPRanges` .Values.global.proxy.includeIPRanges }}"
        traffic.sidecar.istio.io/excludeOutboundIPRanges: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundIPRanges` .Values.global.proxy.excludeIPRanges }}"
        traffic.sidecar.istio.io/includeInboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/includeInboundPorts` (includeInboundPorts .Spec.Containers) }}"
        traffic.sidecar.istio.io/excludeInboundPorts: "{{ excludeInboundPort (annotation .ObjectMeta `status.sidecar.istio.io/port` .Values.global.proxy.statusPort) (annotation .ObjectMeta `traffic.sidecar.istio.io/excludeInboundPorts` .Values.global.proxy.excludeInboundPorts) }}"
          {{ if or (isset .ObjectMeta.Annotations `traffic.sidecar.istio.io/excludeOutboundPorts`) (ne .Values.global.proxy.excludeOutboundPorts "") }}
        traffic.sidecar.istio.io/excludeOutboundPorts: "{{ annotation .ObjectMeta `traffic.sidecar.istio.io/excludeOutboundPorts` .Values.global.proxy.excludeOutboundPorts }}"
          {{- end }}
        traffic.sidecar.istio.io/kubevirtInterfaces: "{{ index .ObjectMeta.Annotations `traffic.sidecar.istio.io/kubevirtInterfaces` }}"
{{- end }}

      affinity:
      {{- include "nodeaffinity" . | indent 6 }}
      {{- include "podAntiAffinity" . | indent 6 }}
{{- if .Values.prometheus.tolerations }}
      tolerations:
{{ toYaml .Values.prometheus.tolerations | indent 6 }}
{{- else if .Values.global.defaultTolerations }}
      tolerations:
{{ toYaml .Values.global.defaultTolerations | indent 6 }}
{{- end }}
